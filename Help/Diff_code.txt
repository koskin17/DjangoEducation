Если распечатать запрос (request) или его данные (print(dir(request))), то можно увидеть все данные метода request

Вместо функции test (path('test/', test, name='test')) может быть передан целый список вложенных маршрутов.

Списки маршрутов приложение лучше хранить в файлах urls.py в папках самих приложений. В корневом urls.py хранятся только основные маршруты / главные страницы для доступа к приложения, а маршруты внутри приложений уже хранятся в urls.py самих приложений.

photo = models.ImageField() # В этом поле сохраняется путь к загруженному файлу. Отличие от FileField в том, что FileField позволяет загружать файлы любого типа,  а ImageField только изображения

created_at = models.DateTimeField(auto_now_add=True) # Отличие от auto_now в том, что auto_now_add один раз фиксируем дату время, а auto_now - каждый раз, когда запись была обновлена и сохранена. Также обязательно надо поставить True (по умолчанию у поля стоит False)

photo = models.ImageField(upload_to='photos/%Y/%m/%d') # В этом поле сохраняется путь к загруженному файлу. Отличие от FileField в том, что FileField позволяет загружать файлы любого типа,  а ImageField только изображения. Также вместо названия папки может быть название вызываемого метода, в котором будет прописана логика загрузки / проверки файлов или ещё что-то

is_published = models.BooleanField(default=True) # Если значение по умолчанию не определено, то значение равно None.

После того, как подготовлены все модели приложеие (models) созаются миграции, которые создают файлы для их последующего исполнения и создания таблиц в Бдю
Для того, чтобы посмотреть SQL код запроса выполнения миграций используется команда python manage.py sqlmigrate news 0001 (указывается имя модели и порядковый номер миграции). После этого будет выведен код SQL-запроса:
    BEGIN;
    --
    -- Create model News
    --
    CREATE TABLE "news_news" ("id" integer NOT NULL PRIMARY KEY AUTOINCREMENT, "title" varchar(150) NOT NULL, "content" text NOT NULL, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL, "photo" varchar(100) NOT NULL, "is_published" bool NOT NULL);
    COMMIT;

    Чтобы посмотреть в консоле django выполненные запросы используется команда:
        from django.db import connection
        connection.queries

        После добавления записи в БД и объекта (строки) появляется свойство "pk", которое равно "id".

    